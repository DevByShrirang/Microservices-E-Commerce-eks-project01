pipeline {
    agent any 
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME= tool 'sonarqube-scanner'
        AWS_ACCOUNT_ID = '421954350274'
        AWS_ECR_REPO_NAME = 'adservice'
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "421954350274.dkr.ecr.us-east-1.amazonaws.com/adservice"

    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/arumullayaswanth/Microservices-E-Commerce-eks-project.git'
            }
            }
        }
        stage("List Files") {
            steps {
                sh 'ls -la' // verfy files after checkout
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('src/adservice') {
                    withSonarQubeEnv('sonarqube-scanner') {
                        sh ''' 
                        $SCANNER_HOME/bin/sonarqube-scanner \
                        -Dsonar.projectName=adservice \
                        -Dsonar.projectKey=adservice 
                        '''
                    }
                }
            }
        }
        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token' 
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('src/adservice') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('src/adservice') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }
        stage("ECR Image Pushing") {
            steps {
                script {
                        sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                        sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                        sh 'docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh 'trivy image ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER} > trivyimage.txt' 
            }
        }
        stage('Checkout Code') {
            steps {
                git branch: 'master', url: 'https://github.com/arumullayaswanth/Microservices-E-Commerce-eks-project.git'
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "Microservices-E-Commerce-eks-project"
                GIT_EMAIL = "Yaswanth.arumulla@gmail.com"
                GIT_USER_NAME = "arumullayaswanth"
                AWS_ECR_REPO_NAME = 'adservice'
                REPOSITORY_URI = "421954350274.dkr.ecr.us-east-1.amazonaws.com/adservice"
                YAML_FILE = "adservice.yaml"
            }
            steps {
                dir('kubernetes-files') {
                    withCredentials([string(credentialsId: 'my-git-pattoken', variable: 'git_token')]) {
                        sh '''
                            git config user.email "${GIT_EMAIL}"
                            git config user.name "${GIT_USER_NAME}"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER

                            # push this image to your git hub
                            sed -i "s#image:.*#image: ${REPOSITORY_URI}:$BUILD_NUMBER#g" ${YAML_FILE}
                            git add .
                            git commit -m "Update ${AWS_ECR_REPO_NAME} Image to version \${BUILD_NUMBER}"
                            git push https://${git_token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
        
                        '''
                    }
                }
            }
        }
        post {
        always {
            emailext attachLog: true,
                subject: "'${currentBuild.result}'",
                body: "Project: ${env.JOB_NAME}<br/>" +
                      "Build Number: ${env.BUILD_NUMBER}<br/>" +
                      "URL: ${env.BUILD_URL}<br/>",
                to: 'yaswanth.arumulla@gmail.com',
                attachmentsPattern: 'trivyfs.txt,trivyimage.txt,dependency-check-report.xml'
        }
    }
    }
}
