@Library('jenkins-shared-library') _

pipeline {
    agent any
    environment {
        ACCOUNT_ID = "442042505508"
        REGION = "us-east-2"
        GIT_EMAIL = "shrirang.patil1812@gmail.com"
        GIT_USER_NAME = "DevByShrirang"
        GIT_REPO_NAME = "Microservices-E-Commerce-eks-project01"
    }

    stages {
        stage('Clean Workspace') {
            steps { cleanWs() }
        }

        stage('Checkout') {
            steps {
                git branch: 'master', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
            }
        }

        stage('Build & Deploy All Services') {
    steps {
        script {
            def services = ["adservice","cartservice","checkoutservice","currencyservice","emailservice",
                            "frontend","loadgenerator","paymentservice","productcatalogservice",
                            "recommendationservice","shippingservice"]

            for (s in services) {
                echo "Processing service: ${s}"
                try {
                    // Build & push Docker image
                    buildAndPush(SERVICE_NAME: s, ACCOUNT_ID: env.ACCOUNT_ID, REGION: env.REGION)

                    // Find all YAML files for this service
                    def yamlFiles = sh(script: "ls kubernetes-files/${s}*.yaml 2>/dev/null || echo ''", returnStdout: true).trim()

                    if (yamlFiles) {
                        yamlFiles.split("\n").each { file ->
                            echo "Updating image tag in: ${file}"
                            
                            // Update image in YAML using yq (safer than sed)
                            sh """
                                yq eval '.spec.template.spec.containers[].image = "${env.ACCOUNT_ID}.dkr.ecr.${env.REGION}.amazonaws.com/${s}:${BUILD_NUMBER}"' -i ${file}
                            """

                            // Optional: commit updated YAML to Git
                            withCredentials([string(credentialsId: 'git_token', variable: 'git_token')]) {
                                sh """
                                    git config user.email "${env.GIT_EMAIL}"
                                    git config user.name "${env.GIT_USER_NAME}"
                                    git add ${file}
                                    git commit -m "Updated ${s} image to ${BUILD_NUMBER}"
                                    git push https://${env.GIT_USER_NAME}:\$git_token@github.com/${env.GIT_USER_NAME}/${env.GIT_REPO_NAME}.git master
                                """
                            }
                        }
                    } else {
                        echo "No YAML found for service: ${s}, skipping manifest update."
                    }

                } catch (err) {
                    echo "Service ${s} failed, skipping to next. Error: ${err}"
                }
            }
        }
    }
}
